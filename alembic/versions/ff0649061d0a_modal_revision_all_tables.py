"""modal revision all tables

Revision ID: ff0649061d0a
Revises: fedaaa57eb6b
Create Date: 2023-10-07 15:55:44.393420

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ff0649061d0a'
down_revision: Union[str, None] = 'fedaaa57eb6b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accostage',
    sa.Column('id_accostage', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date_accoste', sa.Date(), nullable=False),
    sa.Column('numero_escale', sa.String(), nullable=False),
    sa.Column('type_desserte', sa.String(), nullable=False),
    sa.Column('passage_embarque', sa.Integer(), nullable=False),
    sa.Column('passage_debarque', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id_accostage')
    )
    op.create_table('actionaire',
    sa.Column('id_actionaire', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('nom_act', sa.String(), nullable=True),
    sa.Column('prenoms_act', sa.String(), nullable=True),
    sa.Column('adresse_act', sa.String(), nullable=True),
    sa.Column('cin_act', sa.String(), nullable=True),
    sa.Column('contact_act', sa.String(), nullable=True),
    sa.Column('adresse_email_act', sa.String(), nullable=True),
    sa.Column('nom_ent_act', sa.String(), nullable=True),
    sa.Column('localisation_ent_act', sa.String(), nullable=True),
    sa.Column('email_ent_act', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id_actionaire')
    )
    op.create_table('continents',
    sa.Column('id_continent', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nom_continent', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id_continent')
    )
    op.create_table('operation',
    sa.Column('id_operation', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nom_operation', sa.String(), nullable=False),
    sa.Column('type_operation', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id_operation')
    )
    op.create_table('pays',
    sa.Column('id_pays', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nom_pays', sa.String(), nullable=False),
    sa.Column('id_continent_pays', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_continent_pays'], ['continents.id_continent'], ),
    sa.PrimaryKeyConstraint('id_pays')
    )
    op.create_table('ports',
    sa.Column('id_port', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nom_port', sa.String(), nullable=False),
    sa.Column('apmf', sa.Boolean(), nullable=False),
    sa.Column('id_pays_port', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_pays_port'], ['pays.id_pays'], ),
    sa.PrimaryKeyConstraint('id_port')
    )
    op.create_table('navires',
    sa.Column('id_navire', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nom_navire', sa.String(), nullable=False),
    sa.Column('immatricule_navire', sa.String(), nullable=False),
    sa.Column('date_heure_arrive', sa.DateTime(), nullable=False),
    sa.Column('date_heure_depart', sa.DateTime(), nullable=False),
    sa.Column('type_navire', sa.String(), nullable=False),
    sa.Column('observation_navire', sa.Text(), nullable=False),
    sa.Column('id_port_prov', sa.Integer(), nullable=False),
    sa.Column('id_port_dest', sa.Integer(), nullable=False),
    sa.Column('id_port_accoste', sa.Integer(), nullable=False),
    sa.Column('id_accostage_navire', sa.Integer(), nullable=True),
    sa.Column('id_pays_navire', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_accostage_navire'], ['accostage.id_accostage'], ),
    sa.ForeignKeyConstraint(['id_pays_navire'], ['pays.id_pays'], ),
    sa.ForeignKeyConstraint(['id_port_accoste'], ['ports.id_port'], ),
    sa.ForeignKeyConstraint(['id_port_dest'], ['ports.id_port'], ),
    sa.ForeignKeyConstraint(['id_port_prov'], ['ports.id_port'], ),
    sa.PrimaryKeyConstraint('id_navire')
    )
    op.create_table('marchandises',
    sa.Column('id_marchandise', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nature_marchandise', sa.String(), nullable=False),
    sa.Column('tonnage', sa.Double(), nullable=False),
    sa.Column('type_marchandise', sa.String(), nullable=False),
    sa.Column('caractere', sa.String(), nullable=False),
    sa.Column('conditionnement', sa.String(), nullable=False),
    sa.Column('nombre', sa.Integer(), nullable=False),
    sa.Column('observation_marchandise', sa.Text(), nullable=False),
    sa.Column('id_navire_marchandise', sa.Integer(), nullable=False),
    sa.Column('id_operation_marchandise', sa.Integer(), nullable=False),
    sa.Column('id_port_prov', sa.Integer(), nullable=False),
    sa.Column('id_port_dest', sa.Integer(), nullable=False),
    sa.Column('id_actionaire_marchandise', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_actionaire_marchandise'], ['actionaire.id_actionaire'], ),
    sa.ForeignKeyConstraint(['id_navire_marchandise'], ['navires.id_navire'], ),
    sa.ForeignKeyConstraint(['id_operation_marchandise'], ['operation.id_operation'], ),
    sa.ForeignKeyConstraint(['id_port_dest'], ['ports.id_port'], ),
    sa.ForeignKeyConstraint(['id_port_prov'], ['ports.id_port'], ),
    sa.PrimaryKeyConstraint('id_marchandise')
    )
    op.create_table('responsable_navire',
    sa.Column('id_resp', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nom_resp', sa.String(), nullable=True),
    sa.Column('role_resp', sa.String(), nullable=False),
    sa.Column('prenoms_resp', sa.String(), nullable=True),
    sa.Column('adresse', sa.String(), nullable=True),
    sa.Column('cin_resp', sa.String(), nullable=True),
    sa.Column('contact_resp', sa.String(), nullable=True),
    sa.Column('adresse_email_resp', sa.String(), nullable=True),
    sa.Column('nom_ent_resp', sa.String(), nullable=True),
    sa.Column('localisation_ent_resp', sa.String(), nullable=True),
    sa.Column('email_ent_resp', sa.String(), nullable=True),
    sa.Column('id_navire_resp', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_navire_resp'], ['navires.id_navire'], ),
    sa.PrimaryKeyConstraint('id_resp')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('responsable_navire')
    op.drop_table('marchandises')
    op.drop_table('navires')
    op.drop_table('ports')
    op.drop_table('pays')
    op.drop_table('operation')
    op.drop_table('continents')
    op.drop_table('actionaire')
    op.drop_table('accostage')
    # ### end Alembic commands ###
